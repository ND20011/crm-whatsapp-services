#!/bin/bash

# Script para probar el sistema completo CRM Condorito
# Incluye: Auth, WhatsApp, Messages, AI

BASE_URL="http://localhost:3002"
CLIENT_CODE="CLI001"
PASSWORD="demo123456"

echo "üöÄ ========================================"
echo "   TESTING COMPLETE SYSTEM - CRM CONDORITO"
echo "üöÄ ========================================"

# Funci√≥n para extraer token manualmente
extract_token() {
    echo "$1" | grep -o '"accessToken":"[^"]*"' | cut -d'"' -f4
}

echo -e "\n=== 1. Health Check General ==="
curl -s -X GET "$BASE_URL/health"

echo -e "\n\n=== 2. Login ==="
LOGIN_RESPONSE=$(curl -s -X POST "$BASE_URL/api/auth/login" \
  -H "Content-Type: application/json" \
  -d "{\"client_code\": \"$CLIENT_CODE\", \"password\": \"$PASSWORD\"}")

echo "$LOGIN_RESPONSE"

# Extraer token
TOKEN=$(extract_token "$LOGIN_RESPONSE")

if [ -z "$TOKEN" ]; then
    echo "‚ùå Error: No se pudo obtener el token de acceso"
    exit 1
fi

echo -e "\n‚úÖ Token obtenido: ${TOKEN:0:50}..."

echo -e "\n=== 3. Health Check de M√≥dulos ==="
echo "--- Auth Module ---"
curl -s -X GET "$BASE_URL/api/auth/health" \
  -H "Authorization: Bearer $TOKEN"

echo -e "\n\n--- WhatsApp Module ---"
curl -s -X GET "$BASE_URL/api/whatsapp/health" \
  -H "Authorization: Bearer $TOKEN"

echo -e "\n\n--- Messages Module ---"
curl -s -X GET "$BASE_URL/api/messages/health" \
  -H "Authorization: Bearer $TOKEN"

echo -e "\n\n=== 4. Verificar Conversaciones (vac√≠as inicialmente) ==="
curl -s -X GET "$BASE_URL/api/messages/conversations" \
  -H "Authorization: Bearer $TOKEN"

echo -e "\n\n=== 5. Obtener Estad√≠sticas de Mensajes ==="
curl -s -X GET "$BASE_URL/api/messages/stats" \
  -H "Authorization: Bearer $TOKEN"

echo -e "\n\n=== 6. Buscar Mensajes (test vac√≠o) ==="
curl -s -X GET "$BASE_URL/api/messages/search?q=test" \
  -H "Authorization: Bearer $TOKEN"

echo -e "\n\n=== 7. Conectar WhatsApp ==="
CONNECT_RESPONSE=$(curl -s -X POST "$BASE_URL/api/whatsapp/connect" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json")

echo "$CONNECT_RESPONSE"

echo -e "\n\n=== 8. Esperar generaci√≥n de QR... ==="
sleep 3

echo -e "\n=== 9. Obtener QR Code ==="
QR_RESPONSE=$(curl -s -X GET "$BASE_URL/api/whatsapp/qr/$CLIENT_CODE" \
  -H "Authorization: Bearer $TOKEN")

echo "$QR_RESPONSE"

echo -e "\n\n=== 10. Estado de WhatsApp ==="
curl -s -X GET "$BASE_URL/api/whatsapp/status" \
  -H "Authorization: Bearer $TOKEN"

echo -e "\n\n=== 11. Estad√≠sticas de WhatsApp ==="
curl -s -X GET "$BASE_URL/api/whatsapp/stats" \
  -H "Authorization: Bearer $TOKEN"

echo -e "\n\n=== 12. Probar Env√≠o de Mensaje (sin conexi√≥n real) ==="
SEND_RESPONSE=$(curl -s -X POST "$BASE_URL/api/whatsapp/send-message" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" \
  -d '{"to": "5491123456789", "message": "Mensaje de prueba desde CRM Condorito integrado"}')

echo "$SEND_RESPONSE"

echo -e "\n\n=== 13. Verificar Profile del Cliente ==="
curl -s -X GET "$BASE_URL/api/auth/profile" \
  -H "Authorization: Bearer $TOKEN"

echo -e "\n\n=== 14. Desconectar WhatsApp ==="
curl -s -X POST "$BASE_URL/api/whatsapp/disconnect" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json"

echo -e "\n\n=== 15. Logout ==="
curl -s -X POST "$BASE_URL/api/auth/logout" \
  -H "Authorization: Bearer $TOKEN"

echo -e "\n\nüéâ ========================================"
echo "   TESTING COMPLETADO - SISTEMA INTEGRADO"
echo "üéâ ========================================"
echo ""
echo "üìã M√≥dulos probados:"
echo "‚úÖ Autenticaci√≥n (Login/Logout/Profile)"
echo "‚úÖ WhatsApp (Conexi√≥n/QR/Estado/Env√≠o)"
echo "‚úÖ Mensajes (Conversaciones/B√∫squeda/Stats)"
echo "‚úÖ Health Checks de todos los m√≥dulos"
echo "‚úÖ Integraci√≥n completa MessageService"
echo "‚úÖ AIService configurado"
echo ""
echo "üî• SISTEMA LISTO PARA:"
echo "üì± Conectar WhatsApp real escaneando QR"
echo "üí¨ Recibir y guardar TODOS los mensajes"
echo "ü§ñ Respuestas autom√°ticas con IA"
echo "üìä Dashboard de conversaciones"
echo "üéØ Clasificaci√≥n inteligente de mensajes"
echo ""
